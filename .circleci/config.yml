version: 2.1 #version of circle ci config file

jobs:
  # job with name 'lint-frontend-dockerfile' that will use 'cimg/base:stable' image from circle ci
  # this image will use ubuntu image and have git installed
  lint-frontend-dockerfile:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout #checkout from current git repo, source code will be cloned to the container
      - setup_remote_docker #create a remote docker environment, so docker command could be used
      - run: docker pull hadolint/hadolint #install hadolint
      - run: docker run --rm -i ghcr.io/hadolint/hadolint < karsajobs-ui/Dockerfile #run lint
  # job with name 'lint-frontend-dockerfile' that will use 'cimg/base:stable' image from circle ci
  # this image will use ubuntu image and have git installed
  lint-backend-dockerfile:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout #checkout from current git repo, source code will be cloned to the container
      - setup_remote_docker #create a remote docker environment, so docker command could be used
      - run: docker pull hadolint/hadolint #install hadolint
      - run: docker run --rm -i ghcr.io/hadolint/hadolint < karsajobs-backend/Dockerfile #run lint
  # job with name 'build-app-karsajobs-ui' that will use 'cimg/base:stable' image from circle ci
  # this image will use ubuntu image and have git installed
  build-app-karsajobs-ui:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout #checkout from current git repo, source code will be cloned to the container
      - setup_remote_docker #create a remote docker environment, so docker command could be used
      - run: docker build -t lionelritchie29/karsajobs-ui:latest ./karsajobs-ui #build the image
      - run: docker tag lionelritchie29/karsajobs-ui:latest ghcr.io/lionelritchie29/karsajobs-ui:latest #create new image with new tag using source image
      - run: echo $GITHUB_TOKEN | docker login ghcr.io -u lionelritchie29 --password-stdin #login to github
      - run: docker push ghcr.io/lionelritchie29/karsajobs-ui:latest #push the image to github package
  # job with name 'test-app' that will use 'cimg/go:1.19.3' image from circle ci
  # this image will use ubuntu image and already have git and go installed
  test-app:
    docker:
      - image: cimg/go:1.19.3
    steps:
      - checkout #checkout from current git repo, source code will be cloned to the container
      - run: cd karsajobs-backend && go test -v -short --count=1 $(go list ./...) #run test
  # job with name 'build-app-karsajobs' that will use 'cimg/base:stable' image from circle ci
  # this image will use ubuntu image and have git installed
  build-app-karsajobs:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout #checkout from current git repo, source code will be cloned to the container
      - setup_remote_docker #create a remote docker environment, so docker command could be used
      - run: docker build -t lionelritchie29/karsajobs:latest ./karsajobs-backend #build the image
      - run: docker tag lionelritchie29/karsajobs:latest ghcr.io/lionelritchie29/karsajobs:latest #create new image with new tag using source image
      - run: echo $GITHUB_TOKEN | docker login ghcr.io -u lionelritchie29 --password-stdin #login to github
      - run: docker push ghcr.io/lionelritchie29/karsajobs:latest #push the image to github package

workflows:
  # frontened workflows, will run two jobs in sequence: lint-frontend-dockerfile and build-app-karsajobs-ui
  frontend-workflows:
    jobs:
      - lint-frontend-dockerfile
      - build-app-karsajobs-ui:
          requires:
            - lint-frontend-dockerfile
  # backend workflows, will run three jobs in sequence: lint-backend-dockerfile, test-app, and build-app-karsajobs
  backend-workflows:
    jobs:
      - lint-backend-dockerfile
      - test-app:
          requires:
            - lint-backend-dockerfile
      - build-app-karsajobs:
          requires:
            - test-app
